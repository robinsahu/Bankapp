{"mappings":"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","sources":["src/script.js"],"sourcesContent":["'use strict';\n\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n// BANKIST APP\n\n// Data\nconst account1 = {\n  owner: 'Jonas Schmedtmann',\n  movements: [200, 450, -400, 3000, -650, -130, 70, 1300],\n  interestRate: 1.2, // %\n  pin: 1111,\n\n  movementsDates: [\n    '2019-11-18T21:31:17.178Z',\n    '2019-12-23T07:42:02.383Z',\n    '2020-01-28T09:15:04.904Z',\n    '2020-04-01T10:17:24.185Z',\n    '2020-05-08T14:11:59.604Z',\n    '2020-07-26T17:01:17.194Z',\n    '2020-07-28T23:36:17.929Z',\n    '2020-08-01T10:51:36.790Z',\n  ],\n};\n\nconst account2 = {\n  owner: 'Jessica Davis',\n  movements: [5000, 3400, -150, -790, -3210, -1000, 8500, -30],\n  interestRate: 1.5,\n  pin: 2222,\n  movementsDates: [\n    '2019-11-01T13:15:33.035Z',\n    '2019-11-30T09:48:16.867Z',\n    '2019-12-25T06:04:23.907Z',\n    '2020-01-25T14:18:46.235Z',\n    '2020-02-05T16:33:06.386Z',\n    '2020-04-10T14:43:26.374Z',\n    '2020-06-25T18:49:59.371Z',\n    '2020-07-26T12:01:20.894Z',\n  ],\n};\n\nconst account3 = {\n  owner: 'Steven Thomas Williams',\n  movements: [200, -200, 340, -300, -20, 50, 400, -460],\n  interestRate: 0.7,\n  pin: 3333,\n  movementsDates: [\n    '2019-11-01T13:15:33.035Z',\n    '2019-11-30T09:48:16.867Z',\n    '2019-12-25T06:04:23.907Z',\n    '2020-01-25T14:18:46.235Z',\n    '2020-02-05T16:33:06.386Z',\n    '2020-04-10T14:43:26.374Z',\n    '2020-06-25T18:49:59.371Z',\n    '2020-07-26T12:01:20.894Z',\n  ],\n};\n\nconst account4 = {\n  owner: 'Sarah Smith',\n  movements: [430, 1000, 700, 50, 90],\n  interestRate: 1,\n  pin: 4444,\n  movementsDates: [\n    '2019-11-18T21:31:17.178Z',\n    '2019-12-23T07:42:02.383Z',\n    '2020-01-28T09:15:04.904Z',\n    '2020-04-01T10:17:24.185Z',\n    '2020-05-08T14:11:59.604Z',\n    '2020-07-26T17:01:17.194Z',\n    '2020-07-28T23:36:17.929Z',\n    '2020-08-01T10:51:36.790Z',\n  ],\n};\n\nconst accounts = [account1, account2, account3, account4];\n\n// Elements\nconst labelWelcome = document.querySelector('.welcome');\nconst labelDate = document.querySelector('.date');\nconst labelBalance = document.querySelector('.balance__value');\nconst labelSumIn = document.querySelector('.summary__value--in');\nconst labelSumOut = document.querySelector('.summary__value--out');\nconst labelSumInterest = document.querySelector('.summary__value--interest');\nconst labelTimer = document.querySelector('.timer');\n\nconst containerApp = document.querySelector('.app');\nconst containerMovements = document.querySelector('.movements');\n\nconst btnLogin = document.querySelector('.login__btn');\nconst btnTransfer = document.querySelector('.form__btn--transfer');\nconst btnLoan = document.querySelector('.form__btn--loan');\nconst btnClose = document.querySelector('.form__btn--close');\nconst btnSort = document.querySelector('.btn--sort');\n\nconst inputLoginUsername = document.querySelector('.login__input--user');\nconst inputLoginPin = document.querySelector('.login__input--pin');\nconst inputTransferTo = document.querySelector('.form__input--to');\nconst inputTransferAmount = document.querySelector('.form__input--amount');\nconst inputLoanAmount = document.querySelector('.form__input--loan-amount');\nconst inputCloseUsername = document.querySelector('.form__input--user');\nconst inputClosePin = document.querySelector('.form__input--pin');\n\nconst errorUser = document.querySelector('.error_user');\nconst errorPassword = document.querySelector('.error_password');\nconst errorUserTransfer = document.querySelector('.error_userTransfer');\nconst errorAmount = document.querySelector('.error_amount');\n\n\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n// LECTURES\n\nconst currencies = new Map([\n  ['USD', 'United States dollar'],\n  ['EUR', 'Euro'],\n  ['GBP', 'Pound sterling'],\n]);\n\nconst movements = [200, 450, -400, 3000, -650, -130, 70, 1300];\n\n\n\n\n\n// Computing username\n\nconst createUsernames = function (accs) {\n\n  for (const acc of accs) {\n    acc.username = acc.owner.toLowerCase().split(' ').map(function (word) {\n      return word[0];\n    }).join('');\n  }\n};\n\ncreateUsernames(accounts);\n\n// Update UI\n\nconst updateUI = function (acc) {\n  //  Display movements\n  displayMovement(acc);\n\n\n\n  // Display Summary\n  calcDisplaySummary(acc);\n\n  //  Display balance\n  calcDisplayBalance(acc);\n}\n\n// Date Function\n\nconst formatMovementDate = function (date) {\n  const calcDaysPassed = (date1, date2) =>\n    Math.round(Math.abs(date2 - date1) / (1000 * 60 * 60 * 24));\n\n  const daysPassed = calcDaysPassed(new Date(), date);\n  console.log(daysPassed);\n\n  // if (daysPassed === 0) return 'Today';\n  // if (daysPassed === 1) return 'Yesterday';\n  // if (daysPassed <= 7) return `${daysPassed} days ago`;\n\n  const day = `${date.getDate()}`.padStart(2, 0);\n  const month = `${date.getMonth() + 1}`.padStart(2, 0);\n  const year = date.getFullYear();\n  return `${day}/${month}/${year}`;\n  // return new Intl.DateTimeFormat(locale).format(date);\n};\n\n//  Display movements on DIV block\n\nconst displayMovement = function (acc, sort = false) {\n  containerMovements.innerHTML = '';\n\n\n  const movs = sort ? acc.movements.slice().sort((a, b) => a - b) : acc.movements;\n\n  for (const [i, movement] of movs.entries()) {\n\n    const date = new Date(acc.movementsDates[i]);\n    const displayDate = formatMovementDate(date);\n\n\n    const type = movement > 0 ? 'deposit' : 'withdrawal';\n    const html = ` <div class=\"movements__row\">\n          <div class=\"movements__type movements__type--${type}\">${i + 1} ${type}</div>\n          <div class=\"movements__date\">${displayDate}</div>\n          <div class=\"movements__value\">&#8377;${Math.abs(movement)}</div>\n        </div>`;\n\n    containerMovements.insertAdjacentHTML('afterbegin', html);\n    // containerMovements.insertAdjacentHTML('beforeend', html);  // beforeend is used when you need element first on top\n  }\n}\n\n\nconst calcDisplayBalance = function (acc) {\n  acc.balance = acc.movements.reduce(function (acc, mov) {\n    return acc + mov;\n  }, 0);\n  labelBalance.textContent = `₹${acc.balance}`;\n};\n\nconst calcDisplaySummary = function (acc) {\n  const incomes = acc.movements.filter(mov => mov > 0).reduce((acc, mov) => acc + mov, 0);\n  labelSumIn.textContent = `₹${incomes}`;\n\n  const outcome = acc.movements.filter(mov => mov < 0).reduce((acc, mov) => acc + mov, 0);\n  labelSumOut.textContent = `₹${Math.abs(outcome)}`;\n\n  const interest = acc.movements\n    .filter(mov => mov > 0)\n    .map(deposit => (deposit * acc.interestRate) / 100)\n    .filter((int, i, arr) => {\n      // console.log(arr);\n      return int >= 1;\n    })\n    .reduce((acc, int) => acc + int, 0);\n  labelSumInterest.textContent = `₹${interest}`;\n\n}\n\n\n\n\nlet currentAccount, timer;\nlet movementDislplay = 0;\n\n//timer to logout\n\n\nconst startLogOutTimer = function () {\n  // Set time to 5 minutes\n  let time = 600;\n  const tick = function () {\n    const min = String(Math.trunc(time / 60)).padStart(2, 0);\n    const sec = String(time % 60).padStart(2, 0);\n\n    // In each call, print the remaining time to UI\n    labelTimer.textContent = `${min}:${sec}`;\n\n    // When 0 seconds, stop timer and log out user\n    if (time === 0) {\n      clearInterval(timer);\n      labelWelcome.textContent = 'Log in to get started';\n      containerApp.classList.add('hidden');\n    }\n\n    // Decrease 1s\n    time--;\n  };\n\n\n\n  // Call the timer every second\n  tick();\n  timer = setInterval(tick, 1000);\n\n  return timer;\n};\n\n// To validate Login\n\nconst loginValidation = function () {\n  if (inputLoginPin.value === '' || inputLoginUsername.value === '') {\n    if (inputLoginPin.value === '') {\n      document.getElementById('pin_error').textContent = `Pin is required`;\n      errorPassword.classList.remove('hidden');\n      errorUser.classList.add('hidden')\n    }\n    else {\n      document.getElementById('user_error').textContent = `User is required`;\n      errorUser.classList.remove('hidden');\n      errorPassword.classList.add('hidden');\n    }\n  }\n  else if (!currentAccount) {\n    document.getElementById('user_error').textContent = `User does not exist`;\n    errorPassword.classList.add('hidden');\n    errorUser.classList.remove('hidden');\n  }\n  else {\n    document.getElementById('pin_error').textContent = `Pin is incorrect`;\n    errorUser.classList.add('hidden');\n    errorPassword.classList.remove('hidden');\n  }\n}\n\nbtnLogin.addEventListener('click', function (e) {\n  // Prevent form from submitting\n  e.preventDefault();\n\n\n\n  // errorPassword.classList.remove('hidden');\n  // errorUser.classList.remove('hidden');\n\n  currentAccount = accounts.find(\n    acc => acc.username === inputLoginUsername.value\n  );\n\n  loginValidation();\n  inputLoginPin.blur();\n  //When clicking on login when already in user\n\n  if (movementDislplay === 0 && inputLoginPin.value === '' && inputLoginUsername.value === '') {\n    errorUser.classList.add('hidden');\n    errorPassword.classList.add('hidden');\n  }\n  else {\n    movementDislplay === 1;\n  }\n  ///\n  if (currentAccount && currentAccount?.pin === Number(inputLoginPin.value)) {\n    // Display UI and message\n    errorUser.classList.add('hidden');\n    errorPassword.classList.add('hidden');\n    labelWelcome.textContent = `Welcome back, ${currentAccount.owner.split(' ')[0]\n      }`;\n    containerApp.classList.remove('hidden');\n\n    //Clear the input fields\n\n    inputLoginUsername.value = '';\n    inputLoginPin.value = '';\n\n\n\n\n    //update UI\n\n    updateUI(currentAccount);\n    // Timer\n    if (timer) clearInterval(timer);\n    timer = startLogOutTimer();\n\n    const now = new Date();\n    const day = `${now.getDate()}`.padStart(2, 0);\n    const month = `${now.getMonth() + 1}`.padStart(2, 0);\n    const year = now.getFullYear();\n    const hour = `${now.getHours()}`.padStart(2, 0);\n    const min = `${now.getMinutes()}`.padStart(2, 0);\n    labelDate.textContent = `${day}/${month}/${year}, ${hour}:${min}`;\n\n  }\n\n\n});\n\n//to validate transfer fields\n\nconst transferValidation = function (receiverAcc, amount) {\n  if (inputTransferAmount.value === '' || inputTransferTo.value === '') {\n    if (inputTransferAmount.value === '') {\n      document.getElementById('amount_error').textContent = `Amount is required`;\n      errorUserTransfer.classList.add('hidden');\n      errorAmount.classList.remove('hidden')\n      errorAmount.style.backgroundColor = '#fff';\n      errorAmount.style.color = 'Black';\n    }\n    else {\n      document.getElementById('transferUser_error').textContent = `User is required`;\n      errorUserTransfer.classList.remove('hidden');\n      errorAmount.classList.add('hidden')\n      errorUserTransfer.style.backgroundColor = '#fff';\n      errorUserTransfer.style.color = 'Black';\n    }\n  }\n  else if (!receiverAcc) {\n    document.getElementById('transferUser_error').textContent = `User does not exist`;\n    errorUserTransfer.classList.remove('hidden');\n    errorAmount.classList.add('hidden')\n    errorUserTransfer.style.backgroundColor = '#fff';\n    errorUserTransfer.style.color = 'Black';\n  }\n  else if (amount <= 0) {\n    document.getElementById('amount_error').textContent = `Invalid Amount `;\n    errorUserTransfer.classList.add('hidden');\n    errorAmount.classList.remove('hidden')\n    errorAmount.style.backgroundColor = '#fff';\n    errorAmount.style.color = 'Black';\n  }\n\n  else if (currentAccount.balance <= amount) {\n    errorUserTransfer.classList.add('hidden');\n    errorAmount.classList.add('hidden')\n    alert(`You don't have enough balance in your account`);\n\n  }\n  else if (currentAccount.username === receiverAcc.username) {\n    alert(`You can't transfer money to your own account`)\n  }\n}\n\n//Transfer to account\n\nbtnTransfer.addEventListener('click', function (e) {\n  e.preventDefault();\n\n  const amount = Number(inputTransferAmount.value);\n  const receiverAccount = accounts.find(\n    acc => acc.username === inputTransferTo.value\n  );\n  console.log(currentAccount);\n\n  transferValidation(receiverAccount, amount);\n\n\n  if (amount > 0 && currentAccount.balance >= amount && currentAccount.username !== receiverAccount?.username && receiverAccount?.username) {\n\n    receiverAccount.movements.push(amount);\n    currentAccount.movements.push(-amount);\n\n    receiverAccount.movementsDates.push(new Date().toISOString());\n    currentAccount.movementsDates.push(new Date().toISOString());\n    updateUI(currentAccount);\n    inputTransferTo.value = '';\n    inputTransferAmount.value = '';\n    inputTransferAmount.blur();\n    alert(`${amount} has been succesfully transferred to ${receiverAccount.username}`);\n    inputTransferTo.value = '';\n    inputTransferAmount.value = '';\n    inputTransferAmount.blur();\n  }\n\n\n\n})\n\n//Loan amount \n\nbtnLoan.addEventListener('click', function (e) {\n  e.preventDefault();\n\n  const amount = Number(inputLoanAmount.value);\n\n  if (amount > 0 && currentAccount.movements.some(mov => mov >= amount * 0.1)) {\n    // Add movement\n    currentAccount.movements.push(amount);\n    currentAccount.movementsDates.push(new Date());\n    // Update UI\n    updateUI(currentAccount);\n  }\n  inputLoanAmount.value = '';\n});\n\nbtnClose.addEventListener('click', function (e) {\n  e.preventDefault();\n\n  if (inputCloseUsername.value === currentAccount.username && currentAccount?.pin === Number(inputClosePin.value)) {\n    const index = accounts.findIndex(\n      acc => acc.username === currentAccount.username\n    );\n    console.log(index);\n    // .indexOf(23)\n\n    // Delete account\n    accounts.splice(index, 1);\n    containerApp.classList.add('hidden');\n    inputCloseUsername.value = '';\n    inputClosePin.value = '';\n  }\n  else if (currentAccount.username !== inputCloseUsername.value) {\n    alert(`Username is incorrect`);\n  }\n  else {\n    alert(`Pin is incorrect`);\n  }\n})\n\n//sorting\n\nlet sorted = false;\nbtnSort.addEventListener('click', function (e) {\n  e.preventDefault();\n  displayMovement(currentAccount, !sorted);\n  sorted = !sorted;\n});\n\n\n\n\n\n\n"],"names":["$2aac3885343dc6b2$var$accounts","owner","movements","interestRate","pin","movementsDates","$2aac3885343dc6b2$var$labelWelcome","document","querySelector","$2aac3885343dc6b2$var$labelDate","$2aac3885343dc6b2$var$labelBalance","$2aac3885343dc6b2$var$labelSumIn","$2aac3885343dc6b2$var$labelSumOut","$2aac3885343dc6b2$var$labelSumInterest","$2aac3885343dc6b2$var$labelTimer","$2aac3885343dc6b2$var$containerApp","$2aac3885343dc6b2$var$containerMovements","$2aac3885343dc6b2$var$btnLogin","$2aac3885343dc6b2$var$btnTransfer","$2aac3885343dc6b2$var$btnLoan","$2aac3885343dc6b2$var$btnClose","$2aac3885343dc6b2$var$btnSort","$2aac3885343dc6b2$var$inputLoginUsername","$2aac3885343dc6b2$var$inputLoginPin","$2aac3885343dc6b2$var$inputTransferTo","$2aac3885343dc6b2$var$inputTransferAmount","$2aac3885343dc6b2$var$inputLoanAmount","$2aac3885343dc6b2$var$inputCloseUsername","$2aac3885343dc6b2$var$inputClosePin","$2aac3885343dc6b2$var$errorUser","$2aac3885343dc6b2$var$errorPassword","$2aac3885343dc6b2$var$errorUserTransfer","$2aac3885343dc6b2$var$errorAmount","Map","accs","acc","username","toLowerCase","split","map","word","join","$2aac3885343dc6b2$var$createUsernames","$2aac3885343dc6b2$var$updateUI","$2aac3885343dc6b2$var$displayMovement","$2aac3885343dc6b2$var$calcDisplaySummary","$2aac3885343dc6b2$var$calcDisplayBalance","$2aac3885343dc6b2$var$formatMovementDate","date","daysPassed","date1","Date","date2","Math","round","abs","console","log","getDate","padStart","getMonth","getFullYear","sort","innerHTML","movs","slice","a","b","i","movement","entries","type","html","insertAdjacentHTML","balance","reduce","mov","textContent","incomes","filter","outcome","interest","deposit","int","arr","$2aac3885343dc6b2$var$currentAccount","$2aac3885343dc6b2$var$timer","addEventListener","e","find","value","getElementById","classList","remove","add","blur","Number","clearInterval","time","tick","min","String","trunc","sec","setInterval","$2aac3885343dc6b2$var$startLogOutTimer","now","day","month","year","hour","getHours","getMinutes","preventDefault","amount","receiverAccount","receiverAcc","style","backgroundColor","color","alert","push","toISOString","some","index","findIndex","splice","$2aac3885343dc6b2$var$sorted"],"version":3,"file":"index.f5e0f3e0.js.map"}